[tool.poetry]
name = "overloop-tech-test-backend"
version = "1.0.0"
description = "Backend API for Overloop Tech Test - Article Management System"
authors = ["Tech Test Candidate <candidate@example.com>"]
readme = "README.md"
packages = [{include = "techtest"}]

[tool.poetry.dependencies]
python = "^3.9"
flask = "^2.3.3"
flask-cors = "^4.0.0"
sqlalchemy = "^2.0.21"
psycopg2-binary = "^2.9.7"
pydantic = "^2.4.2"
jinja2 = "^3.1.2"
markupsafe = "^2.1.3"
itsdangerous = "^2.1.2"
werkzeug = "^2.3.7"
marshmallow = "<4.0"
flask-apispec = ">=0.11.0"
alembic = "^1.12.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
pytest-watch = "^4.2.0"
pytest-mock = "^3.11.1"
black = "^23.7.0"
flake8 = "^6.0.0"
isort = "^5.12.0"
mypy = "^1.5.1"
ipython = "^8.15.0"
python-dotenv = "^1.0.0"
requests = "^2.31.0"

[tool.poetry.scripts]
start = "techtest.app:main"
dev = "techtest.app:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Black configuration
[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["techtest/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short", 
    "--strict-markers",
    "--strict-config"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow running tests"
]

# Coverage configuration
[tool.coverage.run]
source = ["techtest"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false